
@using EGH01.Core; 
@using EGH01DB.Primitives;
@using EGH01DB.Types;
@model EGH01DB.RGEContext
@{
   
    
    ViewBag.Title = "IncidentType";
    Layout = "~/Views/Shared/EGHLayout.cshtml";
    Menu menu =  new Menu( 
                          new Menu.MenuItem("Создать", "IncidentType.Create",  true),
                          new Menu.MenuItem("Фильтр",  "IncidentType.Filter",  true)
                        );   
    Menu menu1 =  new Menu( 
                           new Menu.MenuItem("Удалить",  "IncidentType.Delete",  true),
                           new Menu.MenuItem("Изменить", "IncidentType.Update",  true)
                          );                  
    List<IncidentType> list = new List<IncidentType>();
    if (@Model != null)
    {
        if (Helper.GetListIncidentType(@Model, ref list))
        {
        
        }
        
        
    }                                     
             
}
<style>
    body {
        color: black;
    }

    *::after {
        content: "";
    }

    label[aria-required]::after {
        content: "*";
        color: red;
    }

    .boxmenu {
        box-sizing: border-box; /* границу включить в размер .box*/
        background-color: darkgray;
        overflow: hidden;
        border: 2px solid darkgray;
        width: 85%;
        margin: 12px;
        padding: 1px;
        min-width: 800px;
    }

    .boxconnect, .boxcainfo {
        box-sizing: border-box;
        background-color: darkgray;
        overflow: hidden;
        border: 2px solid darkgray;
        width: 85%;
        margin: 12px;
        padding: 1px;
        min-width: 800px;
    }

    .boxconnect-boxitem, .boxcainfo-boxitem {
        border: 2px solid white;
        padding: 12px;
    }

        .boxconnect-boxitem label, .boxcainfo-boxitem label {
            width: 10%;
            margin: 10px;
        }

        .boxconnect-boxitem input {
            width: 20%;
            margin: 10px;
        }

        .boxconnect-boxitem button, .boxcainfo-boxitem button {
            float: right;
            background-color: inherit;
            color: white;
            font-weight: bold;
            padding: 10px;
            border: 2px solid white;
            margin: 5px;
        }

    .box-fieldset {
        display: block;
        margin: 5px;
    }

    .boxcainfo-boxitem-fieldset {
        display: block;
        margin: 2px;
    }

    .boxcainfo-boxitem-buttonlist {
        display: block;
        float: right;
        margin: 2px;
    }

    .boxmenu-buttonlist {
        border: 2px solid white;
        padding: 5px;
    }

    .box-close {
        float: right;
        /*border:1px solid white;*/
        background-color: inherit;
        padding: 0px 0px 0px 0px;
        margin: 2px;
        border: none;
    }

    .boxmenu button {
        background-color: inherit;
        color: white;
        font-weight: bold;
        margin: 5px;
        padding: 10px;
        border: 2px solid white;
    }

        .boxmenu button[disabled] {
            background-color: inherit;
            color: gray;
            font-weight: bold;
            margin: 5px;
            padding: 10px;
            border: 2px solid white;
        }

    .box {
        box-sizing: border-box; /* границу включить в размер .box*/
        overflow: hidden; /* все что вылезает за границу .box  - скрывать*/
        border: 2px solid white;
        width: 85%;
        background-color: rgba(196, 183, 183, 0.75);
        margin: 12px;
        padding: 1px;
        min-width: 800px;
    }

        .box .boxdata {
            margin: 5px;
            width: 100%;
        }

    .boxdata label {
        width: 25%;
        float: left;
    }

    .box p {
        margin: 1px;
    }

    .boxdata span {
        width: 25%;
        float: none;
    }

    .boxdata .leftboxdata {
        width: 50%;
        float: left;
    }

    .boxdata .rightboxdata {
        width: 50%;
        float: right;
    }

    .leftboxdata label {
        width: 50%;
        float: left;
    }

    .rightboxdata label {
        width: initial;
        float: left;
        margin-right: 10%;
    }

    .boxdata-input-20 {
        width: 20%;
    }

    .boxdata-input-30 {
        width: 30%;
    }

    .boxdata-input-50 {
        width: 50%;
    }

    .boxdata input[disabled] {
        background-color: inherit; /*rgba(196, 183, 183, 0.75);*/
        color: black;
        border: none;
    }

    .boxcontrol {
        margin: 1px;
        background-color: darkgray;
        padding: 2px;
        text-align: right;
        border: 1px solid white;
        clear: both;
    }

        .boxcontrol input, button {
            background-color: inherit;
            color: white;
            font-weight: bold;
            border: 1px solid white;
        }

            .boxcontrol input[disabled], button[disabled] {
                background-color: inherit;
                color: gray;
                font-weight: bold;
                border: 1px solid white;
            }

    .boxmessage {
        display: none;
        margin: 1px;
        background-color: darkgray;
        padding: 2px;
        border: 1px double white;
        /*text-align:right;*/
    }
</style>


@using (Html.BeginForm("IncidentType", "EGHRGE"))
{ 

  <menu class="boxmenu" type="toolbar">
       
      <div class="boxmenu-buttonlist">
       @foreach(var m in menu)
       {
         <button type="submit" name="menuitem" value= "@m.Value" @(m.Enabled?"":"disabled")> @m.Text </button>
       } 
      </div>   
  </menu>
}

@foreach(IncidentType t in list)
{

    using(Html.BeginForm("IncidentType", "EGHRGE"))
    {
        
      <div class="box">
        <div class="boxdata">
            
            <p><label>Код</label>          @t.type_code.ToString() </p> 
            <p><label>Наименование</label> @t.name </p> 

            <div class="boxcontrol">
                @foreach (var m in menu1)
                {
                    <button type="submit" name="menuitem" value="@m.Value" @(m.Enabled ? "" : "disabled")> @m.Text </button>
                }
            </div>

        </div>
      </div> 
        
    }
  
      
}

















